#
# CryptoMiniSat
#
# Copyright (c) 2009-2014, Mate Soos. All rights reserved.
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in
#all copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#THE SOFTWARE.


import sys
from distutils.core import setup, Extension
from distutils import sysconfig

cconf = """${PY_C_CONFIG}""".split(" ")
ldconf = """${PY_LD_CONFIG}""".split(" ")

def cleanup(dat):
    ret = []
    for elem in dat:
        elem = elem.strip()
        if elem != "":
            ret.append(elem)

    return ret
    # return []

cconf = cleanup(cconf)
ldconf = cleanup(ldconf)
# print "Extra C flags from python-config:", cconf
# print "Extra libraries from python-config:", ldconf


def _init_posix(init):
    """
    Forces g++ instead of gcc on most systems
    credits to eric jones (eric@enthought.com) (found at Google Groups)
    """
    def wrapper():
        init()

        config_vars = sysconfig.get_config_vars()  # by reference
        if config_vars["MACHDEP"].startswith("sun"):
            # Sun needs forced gcc/g++ compilation
            config_vars['CC'] = 'gcc'
            config_vars['CXX'] = 'g++'

        # FIXME raises hardening-no-fortify-functions lintian warning.
        else:
            # Non-Sun needs linkage with g++
            config_vars['LDSHARED'] = 'g++ -shared -g -W -Wall -Wno-deprecated'

        config_vars['CFLAGS'] = '-g -W -Wall -Wno-deprecated'
        config_vars['OPT'] = '-g -W -Wall -Wno-deprecated'

    return wrapper

sysconfig._init_posix = _init_posix(sysconfig._init_posix)

__version__ = '@PROJECT_VERSION@'

ext_kwds = dict(
    name = "_solver",
    sources = ["${CMAKE_CURRENT_BINARY_DIR}/solver_module.cpp"],
    define_macros = [],
    extra_compile_args = cconf + ['-std=c++11', '-I${PROJECT_SOURCE_DIR}/src', '-I${PROJECT_BINARY_DIR}/cmsat4-src'],
    extra_link_args = ldconf,
    language = "c++",
    library_dirs=['.', '${PROJECT_BINARY_DIR}/lib'],
    libraries = ['cryptominisat4']
    # runtime_library_dirs = ["/home/soos/development/sat_solvers/cryptominisat/build/lib"]
)

setup(
    name = "_solver",
    version = __version__,
    py_modules = ['_solver'],
    ext_modules = [Extension(**ext_kwds)],
)
